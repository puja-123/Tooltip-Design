{"version":3,"sources":["Button.js","Tooltip.js","CustomSelect.js","App.js","index.js"],"names":["Button","props","onMouseOver","onMouseOut","className","src","Tooltip","tooltipRef","tooltip_position","id","ref","CustomSelect","handleOnChange","onSelectChange","for","name","onChange","value","App","e","setState","is_selected","current","style","visibility","target","state","React","createRef","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAeiBA,EAbF,SAACC,GAAW,IAEvBC,EAEED,EAFFC,YACAC,EACEF,EADFE,WAEF,OACE,6BACE,4BAAQC,UAAU,gBAAgBF,YAAaA,EAAaC,WAAaA,GAAY,yBAAKC,UAAU,WAAU,yBAAKC,IAAI,2GAAvH,mBCKWC,EAZD,SAACL,GAAU,IAEvBM,EAEEN,EAFFM,WACAC,EACEP,EADFO,iBAEF,OACE,yBAAKC,GAAK,UAAUC,IAAKH,EAAYH,UAAS,UAAMI,IAChD,yBAAKJ,UAAS,iBAAcI,EAAd,WACd,uCAASA,EAAT,yBCSSG,EAjBG,SAACV,GACjB,IAAMW,EAAiBX,EAAMY,eAC7B,OACI,6BACI,2BAAOC,IAAI,mBAAX,8BACA,4BAAQC,KAAK,kBAAkBC,SAAUJ,GACrC,4BAAQK,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,YCwCDC,E,kDA9Cb,aAAc,IAAD,8BACX,gBAQFhB,YAAa,SAACiB,GACZ,EAAKC,SAAS,CAAGC,aAAc,IAC/B,EAAKd,WAAWe,QAAQC,MAAMC,WAAa,WAXhC,EAebrB,WAAa,SAACgB,GACZ,EAAKC,SAAS,CAAGC,aAAc,IAC/B,EAAKd,WAAWe,QAAQC,MAAMC,WAAa,UAjBhC,EAoBbX,eAAiB,SAACM,GAChB,EAAKC,SAAS,CAAEZ,iBAAkBW,EAAEM,OAAOR,SAnB3C,EAAKS,MAAQ,CACXlB,iBAAkB,MAClBa,aAAc,GAEhB,EAAKd,WAAaoB,IAAMC,YANb,E,qDAwBJ,IACApB,EAAoBqB,KAAKH,MAAzBlB,iBACP,OACE,yBAAKJ,UAAU,OACb,uCACA,kBAAC,EAAD,CACES,eAAiBgB,KAAKhB,iBAExB,kBAAC,EAAD,CACEX,YAAa2B,KAAK3B,YAClBC,WAAa0B,KAAK1B,aAElB,kBAAC,EAAD,CACFI,WAAYsB,KAAKtB,WACjBC,iBAAkBA,S,GAvCRmB,IAAMG,WCCxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.91cb393c.chunk.js","sourcesContent":["import React from 'react';\n//define Button component\nconst Button = (props) => {\n  const {\n    onMouseOver,\n    onMouseOut\n  } = props;\n  return (    \n    <div >\n      <button className=\"tootip_button\" onMouseOver={onMouseOver} onMouseOut= {onMouseOut}><div className=\"img-div\"><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS5dO6yVpLojNDhfEga-jWLCbPGItcJuP-A9g&usqp=CAU\"></img></div>Hover over me</button>\n    </div>\n    \n  );\n  }\n  \n  export default Button;","import React from 'react';\n//define Tooltip component\nconst Tooltip = (props) =>{\n  let {\n    tooltipRef,\n    tooltip_position\n  } = props;\n  return (  \n    <div id = \"tooltip\" ref={tooltipRef} className= {`${tooltip_position}`}>\n        <div className = {` Arrow ${tooltip_position}Arrow`}></div>\n        <div>{`${tooltip_position} ToolTip Component`}</div>\n    </div>\n    );\n}\n  export default Tooltip;","import React from 'react';\n//define Custom Select component\nconst CustomSelect= (props) => {\n    const handleOnChange = props.onSelectChange;\n    return (\n        <div>\n            <label for=\"select_position\">Select Tooltip Position : </label>\n            <select name=\"select_position\" onChange={handleOnChange}>\n                <option value=\"top\" >Top</option>\n                <option value=\"bottom\" >Bottom</option>\n                <option value=\"left\" >Left</option>\n                <option value=\"right\" >Right</option>\n            </select>\n    \n        </div>\n        \n        );\n  }\n  \n  export default CustomSelect;","import React from 'react';\nimport Button from './Button';\nimport Tooltip from './Tooltip';\nimport CustomSelect from './CustomSelect';\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      tooltip_position: \"top\",\n      is_selected : false\n    }\n    this.tooltipRef = React.createRef();\n  }\n //method to change the is_selected value to true and set the tooltip componet to visible on the page\n  onMouseOver= (e) =>{\n    this.setState({  is_selected : true })\n    this.tooltipRef.current.style.visibility = \"visible\";\n  }\n\n  //method to change the is_selected value to false and hide  the tooltip componet from the page\n  onMouseOut = (e) =>{\n    this.setState({  is_selected : false })\n    this.tooltipRef.current.style.visibility = \"hidden\";\n  }  \n  //method to check user input for tooltip position and set the state\n  onSelectChange = (e) =>{\n    this.setState({ tooltip_position: e.target.value });\n  }\n  //render the app\n  render(){\n    const {tooltip_position} = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Tooltip</h1>\n        <CustomSelect \n          onSelectChange ={this.onSelectChange}\n        />\n        <Button \n          onMouseOver={this.onMouseOver} \n          onMouseOut ={this.onMouseOut}\n        />\n          <Tooltip\n        tooltipRef={this.tooltipRef} \n        tooltip_position={tooltip_position}\n        />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}